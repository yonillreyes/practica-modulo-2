modulo 2 
Practica 1: 

Actualize los repositorios del sistema (update & Upgrade) y Enumere los repositorios actualmente en uso en su servidor.
Proceda a buscar la herramienta en el cache de los repositorios a ver si se encuentra disponible.
Instale la herramienta "Bashtop Resource Monitor" en caso de ser necesario, agregarla al repositorio local (https://es.linux-console.net/?p=438#gsc.tab=0)
Una vez halla presentado la herramienta anterior, proceda a desinstalarla. eliminando tambien todos los archivos de configuracion 
Elimine todas las dependencias asociadas a este programa que ya no esten en uso

Practica 2:

Cree un trabajo cron que actualice el sistema todas las tardes a las 11 p.m
Programe su m√°quina para que se reinicie todos los domingos a las 3 a.m.
Cree una tarea programada usando el comando "at" para que elimine el contenido de la carpeta /tmp dentro de 1 minuto. Mostrar el resultado con ls /tmp antes y despues de la ejecucion 
 Instalar Bashtop manualmente (desde GitHub)



------------------------------------------------------------------------------------------------------------------------------------------------------------

üìù Antes de instalar:
Necesitamos instalar herramientas de desarrollo esenciales para compilar c√≥digo desde fuentes.

üì¶ Paquetes requeridos:
Make: Para construir el software.

Git: Para clonar el repositorio.

GCC: Compilador de C y C++.

üß± Comando:

sudo dnf install make git gcc
üß¨ Clonar e instalar Bashtop:

Clona el repositorio:

git clone https://github.com/aristocratos/bashtop.git


Entra al directorio clonado:

cd bashtop

Ejecuta la instalaci√≥n:

sudo make install


Ejecuta la herramienta:

bashtop
üîπ 4. Desinstalar Bashtop y borrar configuraci√≥n
üßº Pasos:

Desde el directorio bashtop, ejecuta:

sudo make uninstall


Elimina el directorio:


cd ..
sudo rm -rf bashtop
üîπ
 5. Eliminar dependencias no utilizadas
üßπ Limpieza del sistema:

Elimina todas las dependencias hu√©rfanas que ya no est√©n siendo utilizadas.

sudo dnf autoremove


‚úÖ Comandos adicionales √∫tiles
Comando	Descripci√≥n

sudo dnf history	Ver el historial de transacciones de instalaci√≥n/desinstalaci√≥n.
sudo dnf config-manager --set-enabled <repositorio>	Habilita un repositorio adicional.



------------------------------------------------------------------------------------------------------------------------------------------------------------


pracitca 2

Concepto B√°sico:

Cron es un demonio que permite programar tareas que se ejecuten autom√°ticamente a
intervalos regulares. Los trabajos se definen en un archivo de ‚Äúcrontab‚Äù.

Pasos a Seguir:

Abrir el archivo crontab para editar
En este ejemplo, lo configuraremos para el usuario root (ya que actualizar el sistema requiere permisos administrativos).
Ejecuta el siguiente comando:

sudo crontab -e

Nota: Esto abrir√° el editor de texto configurado (puede ser vi, nano, etc.).

Agregar la l√≠nea de la tarea
Dentro del archivo, agrega la siguiente l√≠nea:


0 23 * * * /usr/bin/dnf update -y

Explicaci√≥n de la l√≠nea:

** 0 23 * * * **

0: minuto 0

23: hora 23 (11 p.m.)

*:todos los dias del mes
*:todos los meses del mes
*:todos los dias de la semana 
/usr/bin/dnf update -y: Este comando actualiza los paquetes instalados. El par√°metro -y indica que responda "s√≠" a todas las preguntas, haciendo la actualizaci√≥n de forma no interactiva.

Ruta completa: Es recomendable usar la ruta completa del comando (/usr/bin/dnf) para evitar problemas con el PATH en el entorno cron.

Guardar y salir del editor
Una vez guardada la l√≠nea, el demonio cron leer√° el nuevo trabajo y se ejecutar√° a las 11 p.m. todos los d√≠as.

Ejercicio 2: Reiniciar la m√°quina todos los domingos a las 3 a.m.

Concepto B√°sico

En cron se puede programar el reinicio de la m√°quina usando el comando reboot. Dado que el reinicio afecta al sistema, es necesario que el trabajo se ejecute como root.

Pasos a Seguir

Abrir el crontab de root (si no lo tienes abierto ya del ejercicio anterior)


sudo crontab -e

Agregar la siguiente l√≠nea:


0 3 * * 0 /sbin/reboot
Explicaci√≥n de la l√≠nea: 0 3 * * 0

0: minuto 0

3: hora 3 (3 a.m.)

* *: todos los d√≠as del mes y todos los meses

0: representa el domingo (en cron, el domingo puede ser 0 o 7, en este caso usamos 0).

/sbin/reboot

Comando para reiniciar el sistema. Nuevamente, se utiliza la ruta completa.

Guardar y salir
El trabajo quedar√° programado y se reiniciar√° el sistema autom√°ticamente cada domingo a las 3 a.m.


UN COMANDO PARA VER SI LOS CRONTAB SE ESTAN EJECUTANDO ES: sudo tail -f /var/log/cron






Ejercicio 3: Tarea programada con "at" para eliminar el contenido de /tmp en 1 minuto Concepto B√°sico
El comando at permite programar tareas √∫nicas que se ejecutan en un momento espec√≠fico, a diferencia de cron que son tareas peri√≥dicas.

Pasos a Seguir
Ver el contenido de /tmp antes de ejecutar la tarea
Para comprobar el estado inicial:


ls -l /tmp
Observa los archivos y directorios listados.

Programar la tarea con at
Ejecuta el siguiente comando para programar la eliminaci√≥n de los archivos dentro de /tmp dentro de 1 minuto:


echo "rm -rf /tmp/*" | at now + 1 minute

Explicaci√≥n:

echo "rm -rf /tmp/*": Prepara el comando a ejecutar.

El operador: | pasa este comando a at.

at now + 1 minute indica que la tarea se ejecutar√° 1 minuto despu√©s de la ejecuci√≥n del comando.

Verificar que la tarea se ha programado
Puedes listar las tareas pendientes con:

atq

Esto mostrar√° el ID de la tarea y la hora de ejecuci√≥n.

Esperar 1 minuto y luego verificar el contenido de /tmp
Despu√©s de que haya transcurrido el tiempo, vuelve a listar el contenido de /tmp:



tambi√©n algo importante es que tenemos que estar en sudo su para ejecutar comandos que necesitan este permiso por ejemplo el comando reboot tenemos que ejecutarlo en superusuario
